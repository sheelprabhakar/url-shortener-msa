apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:latest
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "Password$4"
            - name: MYSQL_DATABASE
              value: "tokendb"
            - name: MYSQL_USER
              value: "app_user"
            - name: MYSQL_PASSWORD
              value: "Password$4"
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysqldir
              mountPath: /var/lib/mysql
            - name: mysql-config-volume
              mountPath: /docker-entrypoint-initdb.d/
            - name: mysql-config-volume
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
            #- name: mysql-config-volume ## specify volume name
            #  mountPath: /etc/mysql/conf.d/default_auth.cnf ## path to mount file
            #  subPath: default_auth ## name of config
      volumes:
        - name: mysqldir
          hostPath:
            # Ensure the file directory is created.
            path: /run/desktop/mnt/host/c/mnt/wsl/mysql-volume
            type: DirectoryOrCreate
        - name: mysql-config-volume ## volume name
          configMap:
            name: mysql-config ## name of ConfigMap
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
      name: mysql
  clusterIP: None
  selector:
    app: mysql